{"version":3,"file":"js/main.js","mappings":";;;;AAAa;AACb;AACA;AACA;AACA;AACA,cAAc,YAAY,YAAY,cAAc;AACpD;AACA,IAAI,wBAAwB,WAAW,GAAG,WAAW;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI,YAAY,kBAAkB,8BAA8B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,2BAA2B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,oBAAoB;AACpB,GAAG;AACH,CAAC","sources":["webpack://my-webpack-project/./js/main.js"],"sourcesContent":["\"use strict\";\r\n\r\nconst importModuleFunc = async moduleName => {\r\n  let link;\r\n  if (moduleName === 'public') {\r\n    link = `${f.SITE_PATH}public/js/${f.PUBLIC_PAGE}.js`;\r\n    moduleName = f.PUBLIC_PAGE;\r\n  } else link = `./module/${moduleName}/${moduleName}.js`;\r\n\r\n  try {\r\n    let importModule = await new Promise((resolve, reject) => {\r\n      import(/* webpackIgnore: true */ link)\r\n        .then(module => resolve(module[moduleName]))\r\n        .catch(err => reject(err));\r\n    });\r\n    return importModule.init() || false;\r\n  } catch (e) { console.error(e); f.showMsg(e, 'error', false); return false; }\r\n}\r\n\r\n//Index.php page\r\nconst initIndex = () => {\r\n  //f.init('');\r\n}\r\n\r\nconst init = (moduleName = 'default') => {\r\n  let module = importModuleFunc(moduleName);\r\n  if (!module) initIndex();\r\n  f.relatedOption();\r\n  return module;\r\n}\r\n\r\nconst setLinkMenu = page => {\r\n  let menu = f.qS('#sidebarMenu');\r\n  if (!menu) return;\r\n\r\n  let target = menu.querySelector('.active');\r\n  while (target) {\r\n    let wrap = target.closest('[data-role=\"link\"]');\r\n    if (!wrap) return;\r\n    target = wrap.previousElementSibling;\r\n    target.click();\r\n  }\r\n\r\n  for (let n of [...menu.querySelectorAll('a')]) {\r\n    let href = n.getAttribute('href') || '';\r\n    if(href.includes(page)) { n.classList.add('active'); break; }\r\n  }\r\n}\r\n\r\nconst cancelFormSubmit = () => {\r\n  f.qA('form', 'keypress', (e) => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      return false;\r\n    }\r\n  });\r\n}\r\n\r\nconst stopPreloader = () => {\r\n  f.gI('preloader').remove();\r\n  f.gI('mainWrapper').classList.add('show');\r\n}\r\n\r\nconst setParentHeight = (target, height) => {\r\n  const n = target.closest(\"ul[aria-expanded=\\\"false\\\"]\");\r\n  if (n) {\r\n    n.style.height = (n.offsetHeight + height) + 'px';\r\n    setParentHeight(n.parentNode, height);\r\n  }\r\n}\r\n\r\n// Event function\r\n// ---------------------------------------------------------------------------------------------------------------------\r\n\r\nconst authEvent = function(e) {\r\n  let target = e.target,\r\n      action = this.getAttribute('data-action');\r\n\r\n  let select = {\r\n    'exit': () => {\r\n      location.href = f.SITE_PATH + `?mode=auth&authAction=exit`;\r\n    }\r\n  }\r\n\r\n  select[action]();\r\n};\r\n\r\nconst sideMenuExpanded = (e, node) => {\r\n  e.preventDefault();\r\n\r\n  const count = node.nextElementSibling.childElementCount,\r\n        height = count * 50;//e.target.parentNode.offsetHeight;\r\n\r\n  if (node.getAttribute('aria-expanded') === 'true') {\r\n    node.setAttribute('aria-expanded', 'false');\r\n    setParentHeight(node, node.nextElementSibling.offsetHeight * -1);\r\n    node.nextElementSibling.style.height = '0';\r\n  } else {\r\n    node.setAttribute('aria-expanded', 'true');\r\n    node.nextElementSibling.style.height = height + 'px';\r\n    setParentHeight(node, height);\r\n  }\r\n}\r\n\r\n// Event bind\r\n// -------------------------------------------------------------------------------------------------------------------\r\n\r\n// Block Authorization\r\nconst onAuthEvent = () => {\r\n  let node = f.gI(f.ID.AUTH_BLOCK);\r\n  node && node.querySelectorAll('[data-action]')\r\n              .forEach(n => n.addEventListener('click', authEvent));\r\n}\r\n\r\nconst onClickSubmenu = () => {\r\n  f.qA('#sidebarMenu [role=\"button\"]').forEach(n =>\r\n    n.addEventListener('click', (e) => sideMenuExpanded(e, n))\r\n  );\r\n}\r\n\r\n// Entrance function\r\n(() => {\r\n  let page = location.pathname.replace(f.SITE_PATH, '').match(/(\\w+)/);\r\n  page = (page && !f.OUTSIDE) ? page[1] : 'public';\r\n\r\n  if (f.gI('authForm')) return;\r\n  cancelFormSubmit();\r\n  onAuthEvent();\r\n  onClickSubmenu();\r\n  f.dictionaryInit();\r\n\r\n  setLinkMenu(page || '/');\r\n  if(page) init(page);\r\n  else initIndex();\r\n\r\n  stopPreloader();\r\n\r\n  setTimeout(() => { // todo разобраться с синхронизацией\r\n    f.initShadow(); // todo убрать отсюда\r\n  }, 100);\r\n})();\r\n"],"names":[],"sourceRoot":""}