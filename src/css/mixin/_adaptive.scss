@use "sass:string";
// Media query manager

/*
0 - 600: Phone
600 - 900: Tablet portrait
900 - 1200: Tablet landscape
1200 - 1800: Normal styles
1800+ : Big Desktop
1em = 16px
The smaller device rules always should write below the bigger device rules
Fixing Order => Base + Typography >> General Layout + Grid >> Page Layout + Component
*/

$breakpoints-xs: 0 !default;
$breakpoints-sm: 575 !default;
$breakpoints-md: 767 !default;
$breakpoints-lg: 991 !default;
$breakpoints-xl: 1200 !default;
$breakpoints-xxl: 1800 !default;

/**
 * $breakpoint keys: phone/mobile/sm | phone-land/ | tab-port | tab-land | desktop | lg
 */
@mixin respond($breakpoint: 'phone', $rule: 'max-width') {
  @if ($breakpoint == "phone" or $breakpoint == "mobile" or $breakpoint == "sm") {
    @media only screen and ($rule: em($breakpoints-sm)) { @content; }
  }

  @if ($breakpoint == "phone-land" or $breakpoint == "md") {
    @media only screen and ($rule: em($breakpoints-md)) { @content; }
  }

  @if ($breakpoint == "tab-port" or $breakpoint == "lg") {
    @media only screen and ($rule: em($breakpoints-lg)) { @content; }
  }

  @if ($breakpoint == "desktop" or $breakpoint == "lg") {
    @media only screen and ($rule: em($breakpoints-xl)) { @content; }
  } @else {
    @media only screen and ($rule: em($breakpoints-xxl)) { @content; }
  }
}

// Don't use it until you need this too much
@mixin customMedia($min: null, $max: null) {
  @if ($min != null) { $min: $min + ''; }
  @if ($max != null) { $max: $max + ''; }

  @if (type-of($min) == string and string.index($min, 'px') == null) { $min: $min + 'px'; }
  @if (type-of($max) == string and string.index($max, 'px') == null) { $max: $max + 'px'; }

  @if ($min != null and $max != null) {
    @media only screen and (min-width: $min) and (max-width: $max) { @content; }
  }

  @if ($min == null and $max != null) {
    @media only screen and (max-width: $max) { @content; }
  }

  @if ($min != null and $max == null) {
    @media only screen and (min-width: $min) { @content; }
  }
}
